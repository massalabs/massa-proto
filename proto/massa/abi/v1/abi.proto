// Copyright (c) 2023 MASSA LABS <info@massa.net>

syntax = "proto3";

package massa.abi.v1;

option csharp_namespace = "Com.Massa.Abi.V1";
option go_package = "github.com/massalabs/massa/abi/v1;v1";
option java_multiple_files = true;
option java_package = "com.massa.abi.v1";
option objc_class_prefix = "SC";
option php_namespace = "Com\\Massa\\Abi\\V1";
option ruby_package = "Com::Massa::Abi::V1";
option swift_prefix = "SC";

// Address
message Address {
  // Address is a string representation of the address
  string address = 1;
}

// Amount
message Amount {
  // Amount is a 64-bit unsigned integer
  fixed64 amount = 1;
}

// Empty
message Empty {
}

// CreateSC
message CreateSCRequest {
  // Bytecode is the compiled code of the smart contract
  bytes bytecode = 1;
}

//  CreateSCResponse
message CreateSCResponse {
  // Address is a string representation of the address
  Address address = 1;
}

// CallSC
message CallRequest {
  // Address is the address of the smart contract
  Address address = 1;
  // Function is the name of the function to call
  string function = 2;
  // Arg is the argument to the function
  bytes arg = 3;
  // call_coins is the amount of coins to pay for the call
  Amount call_coins = 4;
}

// CallResponse
message CallResponse {
  // Return_data is the return value of the function
  bytes return_data = 1;
}

// LocalCall
message LocalCallRequest {
  // Address is the address of the smart contract
  Address address = 1;
  // Function is the name of the function to call
  string function = 2;
  // Arg is the argument to the function
  bytes arg = 3;
}

// LocalCallResponse
message LocalCallResponse {
  // Return_data is the return value of the function
  bytes return_data = 1;
}

// GenerateEventRequest
message GenerateEventRequest {
  // Event
  string event = 1;
}

// TransferCoins
message TransferCoinsRequest {
  // To_address is the address to transfer coins to
  Address to_address = 1;
  // Amount is the amount of coins to transfer
  Amount raw_amount = 2;
}

// FunctionExists
message FunctionExistsRequest {
  // Address is the address of the smart contract
  Address address = 1;
  // Function is the name of the function to call
  string function = 2;
}

// FunctionExistsResponse
message FunctionExistsResponse {
  // Exists is true if the function exists
  bool exists = 1;
}

// log
message LogRequest {
  string message = 1;
}

// test
message TestRequest {
  bytes message_in = 1;
}

message TestResponse {
  bytes message_out = 1;
}
