// Copyright (c) 2023 MASSA LABS <info@massa.net>

syntax = "proto3";

package massa.abi.v1;

option csharp_namespace = "Com.Massa.Abi.V1";
option go_package = "github.com/massalabs/massa/abi/v1;v1";
option java_multiple_files = true;
option java_package = "com.massa.abi.v1";
option objc_class_prefix = "MABI";
option php_namespace = "Com\\Massa\\Abi\\V1";
option ruby_package = "Com::Massa::Abi::V1";
option swift_prefix = "MABI";

// NativeAddress is the address of a smart contract
message NativeAddress {
  // Address is the address of the smart contract
  fixed32 category = 1;
  // Version is the version of the smart contract
  fixed32 version = 2;
  // Content is the content of the smart contract
  bytes content = 3;
}

// NativeAmount is represented as a fraction so precision can be adjusted in
// the future.
message NativeAmount {
  // Numerator is the numerator of the fraction
  fixed64 numerator = 1;
  // Denominator is the denominator of the fraction
  fixed64 denominator = 2;
}

// Empty
message Empty {}

message CreateSCRequest {
  // Bytecode is the compiled code of the smart contract
  bytes bytecode = 1;
}

message CreateSCResponse {
  // Sc_address is the address of the smart contract
  NativeAddress sc_address = 1;
}

// CallSC
message CallRequest {
  // Target_sc_address is the address of the smart contract to call
  NativeAddress target_sc_address = 1;
  // Function is the name of the function to call
  string target_function_name = 2;
  // Argument to the function serialized in a byte array.
  bytes function_arg = 3;
  // call_coins is the amount of coins to pay for the call
  NativeAmount call_coins = 4;
}

// CallResponse
message CallResponse {
  // Return_data is the return value of the function
  bytes return_data = 1;
}

// LocalCall
message LocalCallRequest {
  // Target_sc_address is the address of the smart contract to call
  NativeAddress target_sc_address = 1;
  // Function is the name of the function to call
  string target_function_name = 2;
  // Argument to the function serialized in a byte array.
  bytes function_arg = 3;
}

// LocalCallResponse
message LocalCallResponse {
  // Return_data is the return value of the function
  bytes return_data = 1;
}

// GenerateEventRequest
message GenerateEventRequest {
  // Event
  string event = 1;
}

// TransferCoins
message TransferCoinsRequest {
  // Target_address is the address to transfer coins to
  NativeAddress target_address = 1;
  // Amount_to_transfer is the amount of coins to transfer
  NativeAmount amount_to_transfer = 2;
}

// FunctionExists
message FunctionExistsRequest {
  // Target_sc_address is the address of the smart contract to check
  NativeAddress target_sc_address = 1;
  // Function is the name of the function to call
  string function_name = 2;
}

// FunctionExistsResponse
message FunctionExistsResponse {
  // Exists is true if the function exists
  bool exists = 1;
}

// LogRequest
message LogRequest {
  string message = 1;
}

// TestRequest
message TestRequest {
  bytes message_in = 1;
}

// TestResponse
message TestResponse {
  bytes message_out = 1;
}
