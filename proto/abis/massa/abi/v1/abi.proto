// Copyright (c) 2023 MASSA LABS <info@massa.net>

syntax = "proto3";

package massa.abi.v1;

import "massa/model/v1/address.proto";
import "massa/model/v1/amount.proto";
import "massa/model/v1/hash.proto";
import "massa/model/v1/slot.proto";
import "massa/model/v1/signature.proto";
import "massa/model/v1/time.proto";

option csharp_namespace = "Com.Massa.Abi.V1";
option go_package = "github.com/massalabs/massa/abi/v1;v1";
option java_multiple_files = true;
option java_package = "com.massa.abi.v1";
option objc_class_prefix = "MABI";
option php_namespace = "Com\\Massa\\Abi\\V1";
option ruby_package = "Com::Massa::Abi::V1";
option swift_prefix = "MABI";

// Error message used in abi Response
message Error {
  // a string representing the error
  string message = 1;
}

// Create SC request
message CreateScRequest {
  // Bytecode is the compiled code of the smart contract
  bytes bytecode = 1;
}

// Create SC result
message CreateScResult {
  // Address of the just created smart contract
  massa.model.v1.NativeAddress sc_address = 1;
}

// Call SC request
message CallRequest {
  // Address of the smart contract to call
  massa.model.v1.NativeAddress target_sc_address = 1;
  // Function to call in the targeted smart contract
  string target_function_name = 2;
  // Argument to the function serialized in a byte array.
  bytes function_arg = 3;
  // call_coins is the amount of coins to pay for the call
  massa.model.v1.NativeAmount call_coins = 4;
}

// Call SC response
message CallResponse {
  // Return_data is the return value of the function
  bytes data = 1;
}

// Local execution request
message LocalExecutionRequest {
  // Bytecode is the compiled code of the smart contract
  bytes bytecode = 1;
  // Function to call in the targeted smart contract
  string target_function_name = 2;
  // Argument to the function serialized in a byte array.
  bytes function_arg = 3;
}

// Local call response
message LocalExecutionResponse {
  // Return_data is the return value of the function
  bytes data = 1;
}

// Generate event request
message GenerateEventRequest {
  // Event
  string event = 1;
}

// Generate event resulst
message GenerateEventResult {}

// Transfer coins request
message TransferCoinsRequest {
  // The address of the recipient
  massa.model.v1.NativeAddress target_address = 1;
  // The amount of coins to transfer
  massa.model.v1.NativeAmount amount_to_transfer = 2;
}

// Transfer coins result
message TransferCoinsResult {}

// Transfer coins for request
message TransferCoinsForRequest {
  // The address of the sender
  massa.model.v1.NativeAddress sender_address = 1;
  // The address of the recipient
  massa.model.v1.NativeAddress target_address = 2;
  // The amount of coins to transfer
  massa.model.v1.NativeAmount amount_to_transfer = 3;
}

// Transfer coins for result
message TransferCoinsForResult {}

// Function exists request
message FunctionExistsRequest {
  // Address of the smart contract to call
  massa.model.v1.NativeAddress target_sc_address = 1;
  // The name of the function to check the existance of
  string function_name = 2;
}

// Function exists result
message FunctionExistsResult {
  // Exists is true if the function exists
  bool exists = 1;
}

// Message returned in case of success of an ABI call.
// See the documentation of the specific result for the meaning of the fields.
// Call RespResult because Result will conflict with the Result type in Rust
// data MUSTÂ have the same name as they type in Rust they are converted to type

// Tips to check for completeness exec:
// `rg message | rg "\{" | rg "Result" | wc -l`
// the given count should be equal to the number of messages in RespResult + 2
// the +2 comes from ResResult itself which is counted above and from ComparisonResult which is not in the same category
message RespResult {
  oneof res {
    NativeAddressToStringResult native_address_to_string_result = 1;
    NativePubKeyToStringResult native_pub_key_to_string_result = 2;
    NativeSigToStringResult native_sig_to_string_result = 3;
    NativeHashToStringResult native_hash_to_string_result = 4;
    NativeAmountToStringResult native_amount_to_string_result = 5;
    NativeAddressFromStringResult native_address_from_string_result = 6;
    NativePubKeyFromStringResult native_pub_key_from_string_result = 7;
    NativeSigFromStringResult native_sig_from_string_result = 8;
    NativeHashFromStringResult native_hash_from_string_result = 9;
    NativeAmountFromStringResult native_amount_from_string_result = 10;
    CheckNativeAddressResult check_native_address_result = 11;
    CheckNativePubKeyResult check_native_pub_key_result = 12;
    CheckNativeSigResult check_native_sig_result = 13;
    CheckNativeHashResult check_native_hash_result = 14;
    CheckNativeAmountResult check_native_amount_result = 15;
    AddNativeAmountsResult add_native_amounts_result = 16;
    SubNativeAmountsResult sub_native_amounts_result = 17;
    MulNativeAmountResult mul_native_amount_result = 18;
    ScalarDivRemNativeAmountResult scalar_div_rem_native_amount_result = 19;
    DivRemNativeAmountResult div_rem_native_amount_result = 20;
    CheckedAddNativeTimeResult checked_add_native_time_result = 21;
    CheckedSubNativeTimeResult checked_sub_native_time_result = 22;
    CheckedMulNativeTimeResult checked_mul_native_time_result = 23;
    CheckedScalarDivRemNativeTimeResult checked_scalar_div_rem_native_time_result = 24;
    CheckedDivRemNativeTimeResult checked_div_rem_native_time_result = 25;
    CompareNativeTimeResult compare_native_time_result = 26;
    CompareNativeAddressResult compare_native_address_result = 27;
    CompareNativePubKeyResult compare_native_pub_key_result = 28;
    CompareNativeSigResult compare_native_sig_result = 29;
    VerifyNativeSigResult verify_native_sig_result = 30;
    CompareNativeAmountResult compare_native_amount_result = 31;
    Keccak256Result keccak256_result = 32;
    VerifyEvmSigResult verify_evm_sig_result = 33;
    VerifyBlsSingleSigResult verify_bls_single_sig_result = 34;
    VerifyBlsMultiSigResult verify_bls_multi_sig_result = 35;
    TransferCoinsResult transfer_coins_result = 36;
    GenerateEventResult generate_event_result = 37;
    CreateScResult create_sc_result = 38;
    FunctionExistsResult function_exists_result = 39;
    TransferCoinsForResult transfer_coins_for_result = 40;
    NativeHashResult native_hash_result = 41;
    GetKeysResult get_keys_result = 42;
    GetKeysForResult get_keys_for_result = 43;
    SetDataResult set_data_result = 44;
    AppendDataResult append_data_result = 45;
    GetDataResult get_data_result = 46;
    HasDataResult has_data_result = 47;
    DeleteDataResult delete_data_result = 48;
    SetDataForResult set_data_for_result = 49;
    AppendDataForResult append_data_for_result = 50;
    GetDataForResult get_data_for_result = 51;
    DeleteDataForResult delete_data_for_result = 52;
    HasDataForResult has_data_for_result = 53;
    GetOwnedAddressesResult get_owned_addresses_result = 54;
    GetCallStackResult get_call_stack_result = 55;
    NativeAddressFromNativePubKeyResult native_address_from_native_pub_key_result = 56;
    UnsafeRandomResult unsafe_random_request_result = 57;
    GetNativeTimeResult get_native_time_result = 58;
    GetCurrentSlotResult get_current_slot_result = 59;
    SetBytecodeRequest set_bytecode_request_result = 60;
    SetBytecodeForRequest set_bytecode_for_request_result = 61;
    GetBytecodeResult get_bytecode_result = 62;
    GetBytecodeForResult get_bytecode_for_result = 63;
    CallerHasWriteAccessResult caller_has_write_access_result = 64;
    SeedResult seed_result = 65;
    DateNowResult date_now_result = 66;
    ConsolePutResult console_put_result = 67;
    TraceResult trace_result = 68;
    ProcessExitResult process_exit_result = 69;
    HashSha256Result hash_sha256_result = 70;
    GetOpDataResult get_op_data_result = 71;
    HasOpKeyResult has_op_key_result = 72;
    GetOpKeysResult get_op_keys_result = 73;
    PrintResult print_result = 74;
    GetRemainingGasResult get_remaining_gas_result = 75;
    GetBalanceResult get_balance_result = 76;
    GetBalanceForResult get_balance_for_result = 77;
    GetCallCoinsResult get_call_coins_result = 78;
  }
}

// Generic message that encapsulate response from ABI calls.
message AbiResponse {
  oneof resp {
    // variant for success
    RespResult res = 1;
    // variant for error
    Error error = 2;
  }
}

// Address to string request
message NativeAddressToStringRequest {
  // Address to convert to string
  massa.model.v1.NativeAddress to_convert = 1;
}

// Address to string result
message NativeAddressToStringResult {
  // Converted address
  string converted_address = 1;
}

// PubKey to string request
message NativePubKeyToStringRequest {
  // PubKey to convert to string
  massa.model.v1.NativePubKey to_convert = 1;
}
message NativePubKeyToStringResult {
  // Converted PubKey
  string converted_pubkey = 1;
}

// Sig to string request
message NativeSigToStringRequest {
  // Sig to convert to string
  massa.model.v1.NativeSig to_convert = 1;
}

// Sig to string result
message NativeSigToStringResult {
  // Converted Sig
  string converted_sig = 1;
}

// Hash to string request
message NativeHashToStringRequest {
  // Hash to convert to string
  massa.model.v1.NativeHash to_convert = 1;
}

// Hash to string result
message NativeHashToStringResult {
  // Converted Hash
  string converted_hash = 1;
}

// Amount to string request
message NativeAmountToStringRequest {
  // Amount to convert to string
  massa.model.v1.NativeAmount to_convert = 1;
}

// Amount to string result
message NativeAmountToStringResult {
  // Converted Amount
  string converted_amount = 1;
}

// Address from string request
message NativeAddressFromStringRequest {
  // String to convert to address
  string to_convert = 1;
}

// Address from string result
message NativeAddressFromStringResult {
  // Converted address
  massa.model.v1.NativeAddress converted_address = 1;
}

// PubKey from string request
message NativePubKeyFromStringRequest {
  // String to convert to PubKey
  string to_convert = 1;
}

// PubKey from string result
message NativePubKeyFromStringResult {
  // Converted PubKey
  massa.model.v1.NativePubKey converted_pubkey = 1;
}

// Sig from string request
message NativeSigFromStringRequest {
  // String to convert to Sig
  string to_convert = 1;
}

// Sig from string result
message NativeSigFromStringResult {
  // Converted Sig
  massa.model.v1.NativeSig converted_sig = 1;
}

// Hash from string request
message NativeHashFromStringRequest {
  // String to convert to Hash
  string to_convert = 1;
}

// Hash from string result
message NativeHashFromStringResult {
  // Converted Hash
  massa.model.v1.NativeHash converted_hash = 1;
}

// Amount from string request
message NativeAmountFromStringRequest {
  // String to convert to Amount
  string to_convert = 1;
}

// Amount from string result
message NativeAmountFromStringResult {
  // Converted Amount
  massa.model.v1.NativeAmount converted_amount = 1;
}

// Check address request
message CheckNativeAddressRequest {
  // Address to check
  massa.model.v1.NativeAddress to_check = 1;
}

// Check address result
message CheckNativeAddressResult {
  // Is address valid
  bool is_valid = 1;
}

// Check PubKey request
message CheckNativePubKeyRequest {
  // PubKey to check
  massa.model.v1.NativePubKey to_check = 1;
}

// Check PubKey result
message CheckNativePubKeyResult {
  // Is PubKey valid
  bool is_valid = 1;
}

// Check Sig request
message CheckNativeSigRequest {
  // Sig to check
  massa.model.v1.NativeSig to_check = 1;
}

// Check Sig result
message CheckNativeSigResult {
  // Is Sig valid
  bool is_valid = 1;
}

// Check Hash request
message CheckNativeHashRequest {
  // Hash to check
  massa.model.v1.NativeHash to_check = 1;
}

// Check Hash result
message CheckNativeHashResult {
  // Is Hash valid
  bool is_valid = 1;
}

// Check Amount request
message CheckNativeAmountRequest {
  // Amount to check
  massa.model.v1.NativeAmount to_check = 1;
}

// Check Amount result
message CheckNativeAmountResult {
  // Is Amount valid
  bool is_valid = 1;
}

// Amount addition request
message AddNativeAmountsRequest {
  // First amount to add
  massa.model.v1.NativeAmount amount1 = 1;
  // Second amount to add
  massa.model.v1.NativeAmount amount2 = 2;
}

// Amount addition result
message AddNativeAmountsResult {
  // Sum of amounts
  massa.model.v1.NativeAmount sum = 1;
}

// Amount subtraction request
// try to compute difference = left - right
// fails if right > left
message SubNativeAmountsRequest {
  // First amount to subtract from
  massa.model.v1.NativeAmount left = 1;
  // Second amount to subtract
  massa.model.v1.NativeAmount right = 2;
}

// Amount subtraction result
message SubNativeAmountsResult {
  // Difference of amounts (left - right)
  massa.model.v1.NativeAmount difference = 1;
}

// Amount multiplication request
// Try to compute product = amount * coefficient (fail if overflow)
message MulNativeAmountRequest {
  // Amount to multiply
  massa.model.v1.NativeAmount amount = 1;
  // Coefficient to multiply by
  int64 coefficient = 2;
}

// Amount multiplication result
message MulNativeAmountResult {
  // Product of amount and coefficient
  massa.model.v1.NativeAmount product = 1;
}

// Amount division by scalar request
// Try to compute quotient = dividend / divisor
// Fails if divisor == 0
// Fails if underflow
message ScalarDivRemNativeAmountRequest {
  // Amount to divide
  massa.model.v1.NativeAmount dividend = 1;
  // Divisor to divide by
  int64 divisor = 2;
}

// Amount division by scalar result
message ScalarDivRemNativeAmountResult {
  // Quotient of amount and divisor
  massa.model.v1.NativeAmount quotient = 1;
  // Remainder of amount and divisor
  massa.model.v1.NativeAmount remainder = 2;
}

// Amount division request
message DivRemNativeAmountRequest {
  // Amount to divide
  massa.model.v1.NativeAmount dividend = 1;
  // Divisor to divide by
  massa.model.v1.NativeAmount divisor = 2;
}

// Amount division result
message DivRemNativeAmountResult {
  // Quotient of amount and divisor
  int64 quotient = 1;
  // Remainder of amount and divisor
  massa.model.v1.NativeAmount remainder = 2;
}

// Comparison result
message ComparisonResult {
  // Left is lower
  message LeftLower {}
  // Left is equal to right
  message Equal {}
  // Left is greater
  message LeftGreater {}
  // Status
  oneof restult {
    LeftLower left_lower = 1;
    Equal equal = 2;
    LeftGreater left_greater = 3;
  }
}

// Time addition checked request
message CheckedAddNativeTimeRequest {
  // First time to add
  massa.model.v1.NativeTime left = 1;
  // Second time to add
  massa.model.v1.NativeTime right = 2;
}

// Time addition checked result
message CheckedAddNativeTimeResult {
  // Sum of times
  massa.model.v1.NativeTime sum = 1;
}

// Time subtraction checked request
message CheckedSubNativeTimeRequest {
  // First time to subtract from
  massa.model.v1.NativeTime left = 1;
  // Second time to subtract
  massa.model.v1.NativeTime right = 2;
}

// Time subtraction checked result
message CheckedSubNativeTimeResult {
  // Difference of times (left - right)
  massa.model.v1.NativeTime difference = 1;
}

// Time scalar mult checked request
message CheckedMulNativeTimeRequest {
  // Time to multiply
  massa.model.v1.NativeTime time = 1;
  // Coefficient to multiply by
  int64 coefficient = 2;
}

// Time scalar mult checked result
message CheckedMulNativeTimeResult {
  // Product of time and coefficient
  massa.model.v1.NativeTime product = 1;
}

// Time scalar divrem checked request
message CheckedScalarDivRemNativeTimeRequest {
  // Time to divide
  massa.model.v1.NativeTime dividend = 1;
  // Divisor to divide by
  int64 divisor = 2;
}

// Time scalar divrem checked result
message CheckedScalarDivRemNativeTimeResult {
  // Quotient of time and divisor
  massa.model.v1.NativeTime quotient = 1;
  // Remainder of time and divisor
  massa.model.v1.NativeTime remainder = 2;
}

// Time division checked request
message CheckedDivRemNativeTimeRequest {
  // Time to divide
  massa.model.v1.NativeTime dividend = 1;
  // Divisor to divide by
  massa.model.v1.NativeTime divisor = 2;
}

// Time division checked result
message CheckedDivRemNativeTimeResult {
  // Quotient of time and divisor
  int64 quotient = 1;
  // Remainder of time and divisor
  massa.model.v1.NativeTime remainder = 2;
}

// Time comparison request
message CompareNativeTimeRequest {
  // First time to compare
  massa.model.v1.NativeTime left = 1;
  // Second time to compare
  massa.model.v1.NativeTime right = 2;
}

// Time comparison result
message CompareNativeTimeResult {
  // Comparison result
  ComparisonResult result = 1;
}

// Compare NativeAddress request
message CompareNativeAddressRequest {
  // First address to compare
  massa.model.v1.NativeAddress left = 1;
  // Second address to compare
  massa.model.v1.NativeAddress right = 2;
}

// Compare NativeAddress result
message CompareNativeAddressResult {
  // Comparison result
  ComparisonResult result = 1;
}

// Compare NativePubKey request
message CompareNativePubKeyRequest {
  // First public key to compare
  massa.model.v1.NativePubKey left = 1;
  // Second public key to compare
  massa.model.v1.NativePubKey right = 2;
}

// Compare NativePubKey result
message CompareNativePubKeyResult {
  // Comparison result
  ComparisonResult result = 1;
}

// Compare NativeSig request
message CompareNativeSigRequest {
  // First signature to compare
  massa.model.v1.NativeSig left = 1;
  // Second signature to compare
  massa.model.v1.NativeSig right = 2;
}

// Compare NativeSig result
message CompareNativeSigResult {
  // Comparison result
  ComparisonResult result = 1;
}

// Verify NativeSig request
message VerifyNativeSigRequest {
  // Signature to verify
  massa.model.v1.NativeSig sig = 1;
  // Message to verify
  bytes message = 2;
  // Public key to verify with
  massa.model.v1.NativePubKey pub_key = 3;
}

// Verify NativeSig result
message VerifyNativeSigResult {
  // Verification result
  bool is_verified = 1;
}

// Compare NativeAmount request
message CompareNativeAmountRequest {
  // First amount to compare
  massa.model.v1.NativeAmount left = 1;
  // Second amount to compare
  massa.model.v1.NativeAmount right = 2;
}

// Compare NativeAmount result
message CompareNativeAmountResult {
  // Comparison result
  ComparisonResult result = 1;
}

// Keccak256 hash request
message Keccak256Request {
  // Data to hash
  bytes data = 1;
}

// Keccak256 hash result
message Keccak256Result {
  // Hash of data
  bytes hash = 1;
}

// EVM signature verification request
message VerifyEvmSigRequest {
  // Signature to verify
  bytes sig = 1;
  // Message to verify
  bytes message = 2;
  // Public key to verify with
  bytes pub_key = 3;
}

// EVM signature verification result
message VerifyEvmSigResult {
  // Verification result
  bool is_verified = 1;
}

// BLSÂ signature single verification request
message VerifyBlsSingleSigRequest {
  // Signature to verify
  bytes sig = 1;
  // Message to verify
  bytes message = 2;
  // Public key to verify with
  bytes pub_key = 3;
}

// BLSÂ signature single verification result
message VerifyBlsSingleSigResult {
  // Verification result
  bool is_verified = 1;
}

// BLSÂ signature multiple verification request
message VerifyBlsMultiSigRequest {
  // Signature to verify
  bytes sig = 1;
  // Message to verify
  bytes message = 2;
  // Public keys to verify with
  repeated bytes pub_keys = 3;
}

// BLSÂ signature multiple verification result
message VerifyBlsMultiSigResult {
  // Verification result
  bool is_verified = 1;
}

// Native hash request
message NativeHashRequest {
  // Data to hash
  bytes data = 1;
}

// Native hash result
message NativeHashResult {
  // Hash of data
  massa.model.v1.NativeHash hash = 1;
}

// Get keys request
message GetKeysRequest {
  // keys prefix
  bytes prefix = 1;
}

// Get keys result
message GetKeysResult {
  // keys
  repeated bytes keys = 1;
}

// Get keys for request
message GetKeysForRequest {
  // NativeAddress to get keys for
  massa.model.v1.NativeAddress address = 1;
  // keys prefix
  bytes prefix = 2;
}

// Get keys for result
message GetKeysForResult {
  // keys
  repeated bytes keys = 1;
}

// Set data request
message SetDataRequest {
  // key
  bytes key = 1;
  // value
  bytes value = 2;
}

// Set data result
message SetDataResult {}

// Append data request
message AppendDataRequest {
  // key
  bytes key = 1;
  // value
  bytes value = 2;
}

// Append data result
message AppendDataResult {}

// Get data request
message GetDataRequest {
  // key
  bytes key = 1;
}

// Get data result
message GetDataResult {
  // value
  bytes value = 1;
}

// Has data request
message HasDataRequest {
  // key
  bytes key = 1;
}

// Has data result
message HasDataResult {
  // has data
  bool has_data = 1;
}

// Delete data request
message DeleteDataRequest {
  // key
  bytes key = 1;
}

// Delete data result
message DeleteDataResult {}

// Set data for request
message SetDataForRequest {
  // NativeAddress to set data for
  massa.model.v1.NativeAddress address = 1;
  // key
  bytes key = 2;
  // value
  bytes value = 3;
}

// Set data for result
message SetDataForResult {}

// Append data for request
message AppendDataForRequest {
  // NativeAddress to append data for
  massa.model.v1.NativeAddress address = 1;
  // key
  bytes key = 2;
  // value
  bytes value = 3;
}

// Append data for result
message AppendDataForResult {}

// Get data for request
message GetDataForRequest {
  // NativeAddress to get data for
  massa.model.v1.NativeAddress address = 1;
  // key
  bytes key = 2;
}

// Get data for result
message GetDataForResult {
  // value
  bytes value = 1;
}

// Delete data for request
message DeleteDataForRequest {
  // NativeAddress to delete data for
  massa.model.v1.NativeAddress address = 1;
  // key
  bytes key = 2;
}

// Delete data for result
message DeleteDataForResult {}

// Has data for request
message HasDataForRequest {
  // NativeAddress to check data for
  massa.model.v1.NativeAddress address = 1;
  // key
  bytes key = 2;
}

// Has data for result
message HasDataForResult {
  // has data
  bool has_data = 1;
}

// Get owned addresses request
message GetOwnedAddressesRequest {}

// Get owned addresses result
message GetOwnedAddressesResult {
  // owned addresses
  repeated massa.model.v1.NativeAddress addresses = 1;
}

// Get call stack request
message GetCallStackRequest {}

// Get call stack result
message GetCallStackResult {
  // call stack
  repeated string calls = 1;
}

// Native address form native public key request
message NativeAddressFromNativePubKeyRequest {
  // Native public key
  massa.model.v1.NativePubKey pub_key = 1;
}

// Native address form native public key result
message NativeAddressFromNativePubKeyResult {
  // Native address
  massa.model.v1.NativeAddress address = 1;
}

// Unsafe random request
message UnsafeRandomRequest {}

// Unsafe random result
message UnsafeRandomResult {
  // Random
  int64 random = 1;
}

// Get native time request
message GetNativeTimeRequest {}

// Get native time result
message GetNativeTimeResult {
  // Native time
  massa.model.v1.NativeTime time = 1;
}

// Get current slot request
message GetCurrentSlotRequest {}

// Get current slot result
message GetCurrentSlotResult {
  // Current slot
  massa.model.v1.Slot slot = 1;
}

// Set bytecode request
message SetBytecodeRequest {
  // Bytecode
  bytes bytecode = 2;
}

// Set bytecode  result
message SetBytecodeResult {}

// Set bytecode for request
message SetBytecodeForRequest {
  // NativeAddress to set bytecode for
  massa.model.v1.NativeAddress address = 1;
  // Bytecode
  bytes bytecode = 2;
}

// Set bytecode for result
message SetBytecodeForResult {}

// Get bytecode request
message GetBytecodeRequest {}

// Get bytecode result
message GetBytecodeResult {
  // Bytecode
  bytes bytecode = 1;
}

// Get bytecode for request
message GetBytecodeForRequest {
  // NativeAddress to get bytecode for
  massa.model.v1.NativeAddress address = 1;
}

// Get bytecode for result
message GetBytecodeForResult {
  // Bytecode
  bytes bytecode = 1;
}

// Caller has write access request
message CallerHasWriteAccessRequest {}

// Caller has write access result
message CallerHasWriteAccessResult {
  // Caller has write access
  bool has_write_access = 1;
}

// ASÂ builtin `seed` function
// Seed request
message SeedRequest {}

// Seed result
message SeedResult {
  // Seed
  double seed = 1;
}

// AS builtin `Date.now` function
// date now request
message DateNowRequest {}

// date now result
message DateNowResult {
  // date now
  double date_now = 1;
}

// AS builtin `Console.log` function
// AS builtin `Console.info` function
// AS builtin `Console.warn` function
// AS builtin `Console.error` function
// AS builtin `Console.debug` function
// Console put request
message ConsolePutRequest {
  // message
  string message = 1;
}

// Console put result
message ConsolePutResult {}

// AS builtin `trace` function
// trace request
message TraceRequest {
  // message
  string message = 1;
  int32 n = 2;
  double a0 = 3;
  double a1 = 4;
  double a2 = 5;
  double a3 = 6;
  double a4 = 7;
}

// trace result
message TraceResult {}

// AS builtin `process.exit()` function
// Process exit request
message ProcessExitRequest {
  // exit code
  int32 code = 1;
}

// Process exit result
message ProcessExitResult {}

// Hash sha256 request
message HashSha256Request {
  // data
  bytes data = 1;
}

// Hash sha256 result
message HashSha256Result {
  // hash
  bytes hash = 1;
}

// Get op data request
message GetOpDataRequest {
  // key
  bytes key = 1;
}

// Get op data result
message GetOpDataResult {
  // value
  bytes value = 1;
}

// Has op key request
message HasOpKeyRequest {
  // key
  bytes key = 1;
}

// Has op key result
message HasOpKeyResult {
  // has key
  bool has_key = 1;
}

// Get op keys request
message GetOpKeysRequest {}

// Get op keys result
message GetOpKeysResult {
  // keys
  repeated bytes keys = 1;
}

// Print request
message PrintRequest {
  // message
  string message = 1;
}

// Print result
message PrintResult {}

// Get remaining gas request
message GetRemainingGasRequest {}

// Get remaining gas result
message GetRemainingGasResult {
  // remaining gas
  int64 remaining_gas = 1;
}

// Get balance request
message GetBalanceRequest {}

// Get balance result
message GetBalanceResult {
  // balance
  massa.model.v1.NativeAmount balance = 1;
}

// Get balance for request
message GetBalanceForRequest {
  // NativeAddress to get balance for
  massa.model.v1.NativeAddress address = 1;
}

// Get balance result
message GetBalanceForResult {
  // balance
  massa.model.v1.NativeAmount balance = 1;
}

// Get call coins request
message GetCallCoinsRequest {}

// Get call coins result
message GetCallCoinsResult {
  // coins
  massa.model.v1.NativeAmount coins = 1;
}
