// Copyright (c) 2023 MASSA LABS <info@massa.net>

syntax = "proto3";

package massa.abi.v1;

import "massa/model/v1/address.proto";
import "massa/model/v1/amount.proto";
import "massa/model/v1/hash.proto";
import "massa/model/v1/pubkey.proto";
import "massa/model/v1/signature.proto";

option csharp_namespace = "Com.Massa.Abi.V1";
option go_package = "github.com/massalabs/massa/abi/v1;v1";
option java_multiple_files = true;
option java_package = "com.massa.abi.v1";
option objc_class_prefix = "MABI";
option php_namespace = "Com\\Massa\\Abi\\V1";
option ruby_package = "Com::Massa::Abi::V1";
option swift_prefix = "MABI";

// Error message used in abi Response
message Error {
  string message = 1;
}

// Empty
message Empty {}

message CreateSCRequest {
  // Bytecode is the compiled code of the smart contract
  bytes bytecode = 1;
}

message CreateSCResponse {
  massa.model.v1.NativeAddress sc_address = 1;
}

// CallSC
message CallRequest {
  massa.model.v1.NativeAddress target_sc_address = 1;
  string target_function_name = 2;
  // Argument to the function serialized in a byte array.
  bytes function_arg = 3;
  // call_coins is the amount of coins to pay for the call
  massa.model.v1.NativeAmount call_coins = 4;
}

// CallResponse
message CallResponse {
  // Return_data is the return value of the function
  bytes data = 1;
}

// LocalCall
message LocalCallRequest {
  massa.model.v1.NativeAddress target_sc_address = 1;
  string target_function_name = 2;
  // Argument to the function serialized in a byte array.
  bytes function_arg = 3;
}

// LocalCallResponse
message LocalCallResponse {
  // Return_data is the return value of the function
  bytes data = 1;
}

// GenerateEventRequest
message GenerateEventRequest {
  // Event
  string event = 1;
}

// TransferCoins
message TransferCoinsRequest {
  massa.model.v1.NativeAddress target_address = 1;
  massa.model.v1.NativeAmount amount_to_transfer = 2;
}

// FunctionExists
message FunctionExistsRequest {
  massa.model.v1.NativeAddress target_sc_address = 1;
  // Function is the name of the function to call
  string function_name = 2;
}

// FunctionExistsResponse
message FunctionExistsResponse {
  // Exists is true if the function exists
  bool exists = 1;
}

// Call RespResult becaule Result will conflict with the Result type in Rust
// data MUSTÂ have the same name as they type in Rust they are converted to type
message RespResult {
  oneof res {
    NativeAddressToStringResult native_address_to_string_result = 1;
    NativePubKeyToStringResult native_pub_key_to_string_result = 2;
    NativeSigToStringResult native_sig_to_string_result = 3;
    NativeHashToStringResult native_hash_to_string_result = 4;
    NativeAmountToStringResult native_amount_to_string_result = 5;
    NativeAddressFromStringResult native_address_from_string_result = 6;
    NativePubKeyFromStringResult native_pub_key_from_string_result = 7;
    NativeSigFromStringResult native_sig_from_string_result = 8;
    NativeHashFromStringResult native_hash_from_string_result = 9;
    NativeAmountFromStringResult native_amount_from_string_result = 10;
    CheckNativeAddressResult check_native_address_result = 11;
    CheckNativePubKeyResult check_native_pub_key_result = 12;
    CheckNativeSigResult check_native_sig_result = 13;
    CheckNativeHashResult check_native_hash_result = 14;
    CheckNativeAmountResult check_native_amount_result = 15;
    AddNativeAmountsResult add_native_amounts_result = 16;
    SubNativeAmountsResult sub_native_amounts_result = 17;
    MulNativeAmountResult mul_native_amount_result = 18;
    ScalarDivRemNativeAmountResult scalar_div_rem_native_amount_result = 19;
    DivRemNativeAmountResult div_rem_native_amount_result = 20;
    NativeAmountToBytesResult native_amount_to_bytes_result = 21;
    NativeAmountFromBytesResult native_amount_from_bytes_result = 22;
  }
}

// Generic message that encapsulate response from ABI calls.
message AbiResponse {
  oneof resp {
    RespResult res = 1;
    Error error = 2;
  }
}

// To string
message NativeAddressToStringRequest {
  massa.model.v1.NativeAddress to_convert = 1;
}

message NativeAddressToStringResult {
  string converted_address = 1;
}

message NativePubKeyToStringRequest {
  massa.model.v1.NativePubKey to_convert = 1;
}
message NativePubKeyToStringResult {
  string converted_pubkey = 1;
}

message NativeSigToStringRequest {
  massa.model.v1.NativeSig to_convert = 1;
}

message NativeSigToStringResult {
  string converted_sig = 1;
}

message NativeHashToStringRequest {
  massa.model.v1.NativeHash to_convert = 1;
}

message NativeHashToStringResult {
  string converted_hash = 1;
}

// native_amount_to_string
message NativeAmountToStringRequest {
  massa.model.v1.NativeAmount to_convert = 1;
}

message NativeAmountToStringResult {
  string converted_amount = 1;
}

message NativeAddressFromStringRequest {
  string to_convert = 1;
}

message NativeAddressFromStringResult {
  massa.model.v1.NativeAddress converted_address = 1;
}

message NativePubKeyFromStringRequest {
  string to_convert = 1;
}

message NativePubKeyFromStringResult {
  massa.model.v1.NativePubKey converted_pubkey = 1;
}

message NativeSigFromStringRequest {
  string to_convert = 1;
}

message NativeSigFromStringResult {
  massa.model.v1.NativeSig converted_sig = 1;
}

message NativeHashFromStringRequest {
  string to_convert = 1;
}

message NativeHashFromStringResult {
  massa.model.v1.NativeHash converted_hash = 1;
}

// native_amount_from_string
message NativeAmountFromStringRequest {
  string to_convert = 1;
}

message NativeAmountFromStringResult {
  massa.model.v1.NativeAmount converted_amount = 1;
}

message CheckNativeAddressRequest {
  massa.model.v1.NativeAddress to_check = 1;
}

message CheckNativeAddressResult {
  bool is_valid = 1;
}

message CheckNativePubKeyRequest {
  massa.model.v1.NativePubKey to_check = 1;
}

message CheckNativePubKeyResult {
  bool is_valid = 1;
}

message CheckNativeSigRequest {
  massa.model.v1.NativeSig to_check = 1;
}

message CheckNativeSigResult {
  bool is_valid = 1;
}

message CheckNativeHashRequest {
  massa.model.v1.NativeHash to_check = 1;
}

message CheckNativeHashResult {
  bool is_valid = 1;
}

// check_native_amount
message CheckNativeAmountRequest {
  massa.model.v1.NativeAmount to_check = 1;
}

message CheckNativeAmountResult {
  bool is_valid = 1;
}

// Addition
message AddNativeAmountsRequest {
  massa.model.v1.NativeAmount amount1 = 1;
  massa.model.v1.NativeAmount amount2 = 2;
}

message AddNativeAmountsResult {
  massa.model.v1.NativeAmount sum = 1;
}

// Substraction
// if minued >= substrahend then
//     difference = minued - substrahend
//     return difference
message SubNativeAmountsRequest {
  massa.model.v1.NativeAmount minuend = 1;
  massa.model.v1.NativeAmount subtrahend = 2;
}

message SubNativeAmountsResult {
  massa.model.v1.NativeAmount difference = 1;
}

// Multiplication
// try to compute product = amount * coefficient
message MulNativeAmountRequest {
  massa.model.v1.NativeAmount amount = 1;
  fixed64 coefficient = 2;
}

message MulNativeAmountResult {
  massa.model.v1.NativeAmount product = 1;
}

// Division
// try to compute quotient = dividend / divisor
// if divisor == 0 then error
message ScalarDivRemNativeAmountRequest {
  massa.model.v1.NativeAmount dividend = 1;
  fixed64 divisor = 2;
}
message ScalarDivRemNativeAmountResult {
  massa.model.v1.NativeAmount quotient = 1;
  massa.model.v1.NativeAmount remainder = 2;
}

message DivRemNativeAmountRequest {
  massa.model.v1.NativeAmount dividend = 1;
  massa.model.v1.NativeAmount divisor = 2;
}

message DivRemNativeAmountResult {
  fixed64 quotient = 1;
  massa.model.v1.NativeAmount remainder = 2;
}

// massa.model.v1.NativeAmount from and to byte array
message NativeAmountToBytesRequest {
  massa.model.v1.NativeAmount amount = 1;
}

message NativeAmountToBytesResult {
  bytes amount = 1;
}

message NativeAmountFromBytesRequest {
  bytes amount = 1;
}

message NativeAmountFromBytesResult {
  massa.model.v1.NativeAmount amount = 1;
}
